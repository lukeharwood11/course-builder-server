### Create a user in the database

POST http://localhost:8080/api/create-account
Content-Type: application/json

{
  "firstName" : "jwt",
  "lastName" : "test",
  "password" : "insecure-Password1!",
  "repeatPassword" : "insecure-Password1!",
  "type" : "student",
  "email" : "testEmail@msoe.edu"
}

### Test sign in
// expect that accessToken is returned in body

POST http://localhost:8080/api/auth
Content-Type: application/json

{
  "password" : "insecure-Password1!",
  "email" : "testEmail@msoe.edu"
}

### Test JWT against protected route
// perform twice, once before and after jwt expires
// expect success first, then failure the second time

GET http://localhost:8080/api/users
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImZpcnN0TmFtZSI6Imp3dCIsImxhc3ROYW1lIjoidGVzdCIsImlkIjo4LCJ0eXBlIjoic3R1ZGVudCIsImVtYWlsIjoidGVzdEVtYWlsQG1zb2UuZWR1In0sImlhdCI6MTY2NjM4NjkyNiwiZXhwIjoxNjY2Mzg3ODI2fQ.TgWPsc5jytxzbQP_rNI5rC8BhbZRzLdv_hmDXcEDq2o


### Test JWT refresh
// wait until token should expire, then send

GET http://localhost:8080/api/refresh

### Test JWT again against protected route
// expect success

GET http://localhost:8080/api/users
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImZpcnN0TmFtZSI6Imp3dCIsImxhc3ROYW1lIjoidGVzdCIsImlkIjo4LCJ0eXBlIjoic3R1ZGVudCIsImVtYWlsIjoidGVzdEVtYWlsQG1zb2UuZWR1In0sImlhdCI6MTY2NjM4Njk1OSwiZXhwIjoxNjY2Mzg3ODU5fQ.XqruC3HUjdDr0kXRjf_04AiDrt5hpU9OZv_3Ou2Et5U


### Test Logout
// After running test refresh, which should no longer work

GET http://localhost:8080/api/logout