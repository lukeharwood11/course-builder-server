### Create a user in the database

POST http://localhost:8080/api/create-account
Content-Type: application/json

{
  "firstName" : "Luke",
  "lastName" : "Harwood",
  "password" : "insecure-Password1!",
  "repeatPassword" : "insecure-Password1!",
  "type" : "student",
  "email" : "harwoodl@msoe.edu"
}

### Test sign in
// expect that accessToken is returned in body

POST http://localhost:8080/api/auth
Content-Type: application/json

{
  "password" : "insecure-Password1!",
  "email" : "harwoodl@msoe.edu"
}

### Test JWT against protected route
// perform twice, once before and after jwt expires
// expect success first, then failure the second time

GET http://localhost:8080/api/users
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImZpcnN0TmFtZSI6Ikx1a2UiLCJsYXN0TmFtZSI6Ikhhcndvb2QiLCJpZCI6MSwidHlwZSI6InN0dWRlbnQiLCJlbWFpbCI6Imhhcndvb2RsQG1zb2UuZWR1In0sImlhdCI6MTY2NjEyOTU5MCwiZXhwIjoxNjY2MTI5NjEwfQ.WT5YX6aASoWgWwKXN3Rnz8aLqtbUcPTaXRjgB0mzG38


### Test JWT refresh
// wait until token should expire, then send

GET http://localhost:8080/api/refresh

### Test JWT again against protected route
// expect success

GET http://localhost:8080/api/users
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImZpcnN0TmFtZSI6Ikx1a2UiLCJsYXN0TmFtZSI6Ikhhcndvb2QiLCJpZCI6MSwidHlwZSI6InN0dWRlbnQiLCJlbWFpbCI6Imhhcndvb2RsQG1zb2UuZWR1In0sImlhdCI6MTY2NjEyOTYwMiwiZXhwIjoxNjY2MTI5NjIyfQ.6osmAWjzVbxfyb5D3MAQTFZP_LhHEduQPMkpTgBE6uA


### Test Logout
// After running test refresh, which should no longer work

GET http://localhost:8080/api/logout